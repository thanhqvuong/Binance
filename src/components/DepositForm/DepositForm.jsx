import React, { useState } from "react"; // Import React v√† useState ƒë·ªÉ qu·∫£n l√Ω tr·∫°ng th√°i
import { useNavigate } from "react-router-dom"; // Import useNavigate ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng trang
import dayjs from "dayjs"; // Import dayjs ƒë·ªÉ x·ª≠ l√Ω th·ªùi gian
import "./DepositForm.css"; // Import file CSS ƒë·ªÉ t·∫°o ki·ªÉu d√°ng

const DepositForm = () => {
  const navigate = useNavigate(); // Hook ƒëi·ªÅu h∆∞·ªõng trang
  const [showInput, setShowInput] = useState(false); // Tr·∫°ng th√°i hi·ªÉn th·ªã √¥ nh·∫≠p s·ªë ti·ªÅn
  const [amount, setAmount] = useState(""); // Tr·∫°ng th√°i l∆∞u s·ªë ti·ªÅn nh·∫≠p v√†o

  // L·∫•y th√¥ng tin user t·ª´ localStorage
  const storedUser = JSON.parse(localStorage.getItem("user"));
  const username = storedUser?.username || "";

  // üìå X·ª≠ l√Ω nh·∫≠p s·ªë ti·ªÅn c√≥ d·∫•u `,` ph√¢n c√°ch h√†ng ngh√¨n
  const handleAmountChange = (e) => {
    let value = e.target.value.replace(/\D/g, ""); // Ch·ªâ gi·ªØ s·ªë
    if (!value) {
      setAmount("");
      return;
    }
    
    let formattedValue = parseInt(value, 10).toLocaleString("vi-VN"); // ƒê·ªãnh d·∫°ng s·ªë
    setAmount(formattedValue);
  };

  // X·ª≠ l√Ω khi nh·∫•n n√∫t n·∫°p ti·ªÅn
  const handleDeposit = () => {
    if (!username) { // Ki·ªÉm tra n·∫øu user ch∆∞a ƒëƒÉng nh·∫≠p
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi n·∫°p ti·ªÅn!");
      return;
    }

    const parsedAmount = Number(amount.replace(/,/g, "")); // Chuy·ªÉn v·ªÅ s·ªë nguy√™n

    if (!amount || isNaN(parsedAmount) || parsedAmount <= 0 || !Number.isInteger(parsedAmount)) {
      alert("Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn h·ª£p l·ªá (s·ªë nguy√™n d∆∞∆°ng)!");
      return;
    }

    // L·∫•y th·ªùi gian hi·ªán t·∫°i b·∫±ng dayjs
    const formattedTime = dayjs().format("YYYY-MM-DD HH:mm:ss");

    // T·∫°o object giao d·ªãch
    const newTransaction = {
      username,
      type: "N·∫°p",
      amount: parsedAmount,
      currency: "VND",
      time: formattedTime,
    };

    // L·∫•y danh s√°ch giao d·ªãch t·ª´ localStorage (n·∫øu ch∆∞a c√≥ th√¨ t·∫°o m·∫£ng r·ªóng)
    const transactions = JSON.parse(localStorage.getItem("transactions")) || [];
    transactions.push(newTransaction);

    // L∆∞u danh s√°ch giao d·ªãch v√†o localStorage
    localStorage.setItem("transactions", JSON.stringify(transactions));

    alert(`‚úÖ B·∫°n ƒë√£ n·∫°p ${parsedAmount.toLocaleString("vi-VN")} VND th√†nh c√¥ng!`);
    setShowInput(false);
    setAmount("");
  };

  return (
    <div className="deposit-container">
      <h2>N·∫°p</h2>

      <label>Lo·∫°i ti·ªÅn t·ªá</label>
      <select>
        <option value="VND">VND ƒê·ªìng Vi·ªát Nam</option>
        <option value="USD">USD ƒê√¥ la M·ªπ</option>
        <option value="EUR">EUR Euro</option>
        <option value="BTC">BTC Bitcoin</option>
      </select>

      <label>Thanh to√°n b·∫±ng</label>
      <div className="payment-box">Giao d·ªãch nhanh P2P</div>

      {!showInput ? (
        <button className="continue-button" onClick={() => setShowInput(true)}>
          N·∫°p
        </button>
      ) : (
        <div className="deposit-input">
          <input
            type="text"
            placeholder="Nh·∫≠p s·ªë ti·ªÅn n·∫°p"
            value={amount}
            onChange={handleAmountChange}
          />
          <button className="confirm-button" onClick={handleDeposit}>
            X√°c nh·∫≠n n·∫°p
          </button>
        </div>
      )}

      <button className="trading-button" onClick={() => navigate("/trading")}>
        Giao d·ªãch P2P
      </button>
    </div>
  );
};

export default DepositForm;
