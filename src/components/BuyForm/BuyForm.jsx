import React, { useState, useEffect } from "react"; // Import React v√† hooks
import "./BuyForm.css"; // Import file CSS

const BuyForm = () => {
  const [vnd, setVnd] = useState(150000); // S·ªë ti·ªÅn m·∫∑c ƒë·ªãnh t·ªëi thi·ªÉu
  const [usdt, setUsdt] = useState((150000 / 25870).toFixed(6)); // T√≠nh USDT t·ª´ VND
  const [error, setError] = useState(""); // L∆∞u tr·∫°ng th√°i l·ªói
  const [balance, setBalance] = useState(0); // S·ªë d∆∞ t√†i kho·∫£n
  const [subscription, setSubscription] = useState(null); // G√≥i ƒë·ªãnh k·ª≥ hi·ªán t·∫°i
  const [usdtAmount, setUsdtAmount] = useState(1); // S·ªë USDT mu·ªën mua
  const [lastPurchase, setLastPurchase] = useState(null); // L·∫ßn mua cu·ªëi c√πng
  const USDT_RATE = 25870; // T·ª∑ gi√° USDT
  
  useEffect(() => {
    loadUserData(); // G·ªçi h√†m t·∫£i d·ªØ li·ªáu khi component mount
  }, []);

  const formatCurrency = (value) => {
    return value.toLocaleString("vi-VN").replace(/\./g, ","); // ƒê·ªãnh d·∫°ng s·ªë ti·ªÅn VND
  };

  const loadUserData = () => {
    const storedUser = JSON.parse(localStorage.getItem("user")); // L·∫•y th√¥ng tin user t·ª´ localStorage
    if (!storedUser) return;

    const transactions = JSON.parse(localStorage.getItem("transactions")) || []; // L·∫•y danh s√°ch giao d·ªãch
    const userTransactions = transactions.filter(tx => tx.username === storedUser.username); // L·ªçc giao d·ªãch theo user

    let totalVND = userTransactions.reduce((acc, tx) => {
      if (tx.type === "N·∫°p") return acc + tx.amount; // C·ªông s·ªë ti·ªÅn n·∫øu l√† n·∫°p
      if (tx.type === "R√∫t") return acc - tx.amount; // Tr·ª´ s·ªë ti·ªÅn n·∫øu l√† r√∫t
      return acc;
    }, 0);
    setBalance(totalVND); // C·∫≠p nh·∫≠t s·ªë d∆∞ t√†i kho·∫£n

    const storedSubscription = JSON.parse(localStorage.getItem("subscription")); // L·∫•y th√¥ng tin g√≥i ƒë·ªãnh k·ª≥
    if (storedSubscription?.username === storedUser.username) {
      setSubscription(storedSubscription.plan); // C·∫≠p nh·∫≠t g√≥i ƒë·ªãnh k·ª≥
      setUsdtAmount(storedSubscription.vndAmount / USDT_RATE); // T√≠nh l·∫°i s·ªë USDT
      setLastPurchase(storedSubscription.lastPurchase); // C·∫≠p nh·∫≠t ng√†y mua cu·ªëi
    }
  };

  const handleSubscriptionChange = (plan) => {
    const storedUser = JSON.parse(localStorage.getItem("user")); // L·∫•y user t·ª´ localStorage
    if (!storedUser || balance < vnd) {
      setError("‚ùå S·ªë d∆∞ kh√¥ng ƒë·ªß!"); // B√°o l·ªói n·∫øu kh√¥ng ƒë·ªß ti·ªÅn
      return;
    }

    const newSubscription = {
      username: storedUser.username,
      plan, // L∆∞u lo·∫°i g√≥i ƒë·ªãnh k·ª≥
      vndAmount: vnd, // L∆∞u s·ªë ti·ªÅn VND
      lastPurchase: null, // Reset ng√†y mua
    };
    localStorage.setItem("subscription", JSON.stringify(newSubscription)); // L∆∞u v√†o localStorage
    setSubscription(plan); // C·∫≠p nh·∫≠t UI
  };

  const cancelSubscription = () => {
    localStorage.removeItem("subscription"); // X√≥a g√≥i ƒë·ªãnh k·ª≥ kh·ªèi localStorage
    setSubscription(null); // C·∫≠p nh·∫≠t UI
  };

  const increaseUSDT = () => {
    let newVnd = (usdtAmount + 1) * USDT_RATE; // T√≠nh s·ªë ti·ªÅn m·ªõi khi tƒÉng USDT
    setVnd(newVnd);
    setUsdtAmount(usdtAmount + 1);
  };

  const decreaseUSDT = () => {
    if (usdtAmount > 1) {
      let newVnd = (usdtAmount - 1) * USDT_RATE; // T√≠nh s·ªë ti·ªÅn m·ªõi khi gi·∫£m USDT
      setVnd(newVnd);
      setUsdtAmount(usdtAmount - 1);
    }
  };

  return (
    <div className="buy-form">
      <h2>üîπ Giao D·ªãch USDT ƒê·ªãnh K·ª≥ üîπ</h2>
      <p><strong>S·ªë d∆∞:</strong> {formatCurrency(balance)} VND</p>
      {subscription ? (
        <div>
          <p>G√≥i hi·ªán t·∫°i: {subscription} - {formatCurrency(vnd)} VND</p>
          <button onClick={decreaseUSDT}>-</button>
          <span>{usdtAmount} USDT</span>
          <button onClick={increaseUSDT}>+</button>
          <button onClick={cancelSubscription}>‚ùå H·ªßy g√≥i</button>
        </div>
      ) : (
        <div>
          <button onClick={() => handleSubscriptionChange("daily")} disabled={balance < vnd}>M·ªói ng√†y</button>
          <button onClick={() => handleSubscriptionChange("every2days")} disabled={balance < vnd}>2 ng√†y/l·∫ßn</button>
          <button onClick={() => handleSubscriptionChange("monthly")} disabled={balance < vnd}>M·ªói th√°ng</button>
        </div>
      )}
      {error && <p className="error">{error}</p>}
    </div>
  );
};

export default BuyForm; // Xu·∫•t component
